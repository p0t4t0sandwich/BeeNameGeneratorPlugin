import org.spongepowered.gradle.plugin.config.PluginLoaders
import org.spongepowered.plugin.metadata.model.PluginDependency

plugins {
    id('com.github.johnrengelman.shadow') version('8.1.1')
    id('java-library')
    id("org.spongepowered.gradle.plugin") version('2.1.1')
}

compileJava.options.encoding = 'UTF-8'

sponge {
    apiVersion(spongeapi_version)
    license("GPL-3.0")
    loader {
        name(PluginLoaders.JAVA_PLAIN)
        version("1.0")
    }
    plugin("taterlib") {
        displayName("TaterLib")
        entrypoint("dev.neuralnexus.taterlib.sponge.SpongeTaterLibPlugin")
        description("A cross API code library for various generalizations used in the Tater* plugins")
        links {
             homepage("https://github.com/p0t4t0sandwich/TaterLib#taterapi")
             source("https://github.com/p0t4t0sandwich/TaterLib")
             issues("https://github.com/p0t4t0sandwich/TaterLib/issues")
        }
        dependency("spongeapi") {
            loadOrder(PluginDependency.LoadOrder.AFTER)
            optional(false)
        }
        dependency("luckperms") {
            version("5.3.0")
            loadOrder(PluginDependency.LoadOrder.AFTER)
            optional(true)
        }
    }
}

dependencies {
    implementation(project(path: ':common', configuration: 'shadow'))
}

shadowJar {
    dependencies {
        include(project(":common"))
    }

    destinationDirectory = file('../target')
    archiveFileName = "TaterLib-${version}-sponge8.jar"
}
shadowJar.doLast {
    task ->
        ant.checksum(file: task.archivePath) {
            hashAlgorithm = 'md5'
            property = 'md5sum'
        }
}

artifacts {
    archives(shadowJar)
}